# Project language
language: php

# Allows use container-based infrastructure
sudo: true

services:
  - mysql
  - redis-server

php:
  - 7.2
  #- master

# Env
env:
  matrix:
    - DEPENDENCIES="high"
    #- DEPENDENCIES="low"
  global:
    - DEFAULT_COMPOSER_FLAGS="--no-interaction --no-ansi --no-progress --no-suggest"

addons:
  hosts:
    - getresources.local # Host (https://docs.travis-ci.com/user/hosts)
  apt:
    update: true

# Cache composer packages so "composer install" is faster
cache:
  directories:
    - $HOME/.composer/cache/files

# Update composer
before_install:
  - echo "extension=redis.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini # https://blog.travis-ci.com/2013-03-08-preinstalled-php-extensions / https://docs.travis-ci.com/user/languages/php/#PHP-extensions
  - sudo echo never > /sys/kernel/mm/transparent_hugepage/enabled # Transparent Huge Pages (THP) support disabled. This will create latency and memory usage issues with Redis
  - composer self-update
  - composer clear-cache

# Install
install:
  - echo `pwd`
  - cp .env.dist .env
  - cp .env.test.dist .env.test
  - if [[ "$DEPENDENCIES" = 'high' ]]; then travis_retry composer install $DEFAULT_COMPOSER_FLAGS; fi
  - if [[ "$DEPENDENCIES" = 'low' ]]; then travis_retry composer install $DEFAULT_COMPOSER_FLAGS --prefer-lowest; fi

before_script:
  - echo `pwd`
  - mysql -u root -e "SHOW VARIABLES LIKE '%version%';"
  - mysql -u root -e "SHOW ENGINES;"
  - mysql -u root -e "CREATE DATABASE \`${MYSQL_ADDON_DB}\`;"
  - sudo redis-server --port ${REDIS_PORT} --requirepass ${REDIS_PASSWORD}& # slap a & at the end of the line, and the process will be forked into the background
  - php bin/console doctrine:schema:create
  - php bin/console doctrine:schema:validate

# Run script
script:
  - php bin/console hautelook:fixtures:load -n -vv
  - php bin/console search:clear -i sites -v
  - php bin/console search:import -i sites -v
  - sleep 5 # leave time to Algolia to index
  - php ./vendor/phpunit/phpunit/phpunit --coverage-clover=coverage.xml --stderr -v

after_success:
  - sudo kill -9 $(ps aux | grep 'redis-server' | awk '{print $2}') # killing background process
  - bash <(curl -s https://codecov.io/bash)

# After a build, send email notification with the build results
notifications:
  email: hello@getresources.tech