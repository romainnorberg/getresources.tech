# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler:
          arguments:
              - 'mysql:dbname=%env(MYSQL_ADDON_DB)%'
              - { db_username: '%env(MYSQL_ADDON_USER)%', db_password: '%env(MYSQL_ADDON_PASSWORD)%' }

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']


    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\EventListener\ResponseListener:
        tags:
            - { name: kernel.response_listener, event: kernel.response }

    App\EventListener\Doctrine\HashPasswordListener:
        tags:
            - { name: doctrine.event_subscriber }

    App\EventListener\AuthenticationEventListener:
        tags:
            - { name: authentication.success.listener }

    Algolia\SearchBundle\IndexManager:
            alias: search.index_manager